{"version":3,"sources":["components/PlanForm.js","components/Plan.js","components/PlanList.js","App.js","index.js"],"names":["PlanForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Plan","plans","completePlan","removePlan","updatePlan","setEdit","map","index","isComplete","PlanList","setPlans","plan","test","newPlan","console","log","alert","updatedPlans","removedPlan","filter","planId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f419602.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';   //Import react using useState, useEffect, useRef\r\n\r\nfunction PlanForm(props) {\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input\r\n    });\r\n    setInput('');\r\n  };\r\n\r\n  //For for new plan or update the previous plan --> Return form\r\n  return (\r\n    <form onSubmit={handleSubmit} className='plan-form'>\r\n      {props.edit ? (\r\n        <>\r\n          <input\r\n            placeholder='Update Plan'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            ref={inputRef}\r\n            className='plan-input edit'\r\n          />\r\n          <button onClick={handleSubmit} className='plan-button edit'>\r\n            Update\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            placeholder=\"Add Today's Plan\"\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='plan-input'\r\n            ref={inputRef}\r\n          />\r\n          <button onClick={handleSubmit} className='plan-button'>\r\n            Add Plan\r\n          </button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PlanForm;","import React, { useState } from 'react'; //Import react using useState\r\nimport PlanForm from './PlanForm'; //Import PlanForm\r\nimport { RiCloseCircleLine } from 'react-icons/ri'; //Delete icon\r\nimport { TiEdit } from 'react-icons/ti'; //Edit Icon\r\n\r\n//Process plans, completePlan, removePlan, updatePlan\r\nconst Plan = ({ plans, completePlan, removePlan, updatePlan }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updatePlan(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    //Will return to PlanForm\r\n    return <PlanForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return plans.map((Plan, index) => (\r\n    <div\r\n      className={Plan.isComplete ? 'plan-row complete' : 'plan-row'}\r\n      key={index}\r\n    >\r\n      <div key={Plan.id} onClick={() => completePlan(Plan.id)}>\r\n        {Plan.text}\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removePlan(Plan.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: Plan.id, value: Plan.text })}\r\n          className='edit-icon'\r\n        />\r\n      </div>\r\n    </div>\r\n  )); \r\n};\r\n\r\nexport default Plan;","import React, {useState} from 'react';  //Import react using useState\r\nimport PlanForm from './PlanForm';  //Import PlanForm\r\nimport Plan from './Plan';  //Import Plan\r\n\r\nfunction PlanList() {\r\n  const [plans, setPlans] = useState([]);\r\n    \r\n  //Process addPlan when submit button is clicked\r\n  const addPlan = plan => {\r\n    if (!plan.text || /^\\s*$/.test(plan.text)) {\r\n        alert(\"Please type out your plan\");\r\n      return;\r\n    }\r\n    \r\n    //Create a new plan\r\n    const newPlan = [plan, ...plans];\r\n    //Set or store the new plan\r\n    setPlans(newPlan);\r\n    console.log(...plans);\r\n  };\r\n\r\n  //Update any change from user plan  \r\n  const updatePlan = (planId, newValue) => {\r\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n      return;\r\n    }\r\n    //Set or store the new plan\r\n    setPlans(prev => prev.map(item => (item.id === planId ? newValue : item)));\r\n  };\r\n\r\n  //Remove user plan from the list \r\n  const removePlan = id => {\r\n    const removedPlan = [...plans].filter(plan => plan.id !== id);\r\n    //Set or store the new plan\r\n    setPlans(removedPlan);\r\n  };\r\n\r\n  //Add user plan to list \r\n  const completePlan = id => {\r\n    let updatedPlans = plans.map(plan => {\r\n        \r\n      if (plan.id === id) {\r\n        plan.isComplete = !plan.isComplete;\r\n      }\r\n      return plan;\r\n    });\r\n    //Set or store the new plan\r\n    setPlans(updatedPlans);\r\n  };\r\n\r\n  //Html pass return to display on screen\r\n  return (\r\n    <>\r\n      <h1>Today's Plan...</h1>\r\n      \r\n      <PlanForm onSubmit={addPlan} />   {/* Show form and onSubmit function called addPlan */}\r\n      <Plan\r\n        plans={plans}\r\n        completePlan={completePlan}\r\n        removePlan={removePlan}\r\n        updatePlan={updatePlan}\r\n      />   \r\n      <p>Provided by Egerton.</p>\r\n       {/* This will remove, update and complete plan */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PlanList;","\r\nimport './App.css';\r\nimport PlanList from './components/PlanList';\r\n\r\n//This is the main form that shows on the screen\r\nfunction App() {\r\n  return (\r\n    <div className=\"plan-app\">\r\n      \r\n      <PlanList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}